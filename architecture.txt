backend (Framework module)
    - Fastify with nodejs
    - if backend or framework uses database 
        -> Database module with SQLite
    - use Docker to run the website 
    - single command line that runs an autonomous container

frontend (FrontEnd module)
    Tailwind CSS in addition of the Typescript, and nothing else
    single-sided application (SPA)\
    -> loads one web page once and after that only updates parts that changed e.g. gmail, google maps
    back & forward button
    compatible with Firefox
    no errors or warnings when browsing the website


game
    live pong game against another player directly on the website
    both players use the same keyboard
        -> Remote players module enhances this
    player must be able to play against each other
    tournament system
    registration system
        -> each player must input their alias
        -> reset after every tournament except if Standard User Management Module
        -> with that module: aliases are linked to registered accounts, allowing persistens stats and friend lists
    matchmaking system
    all players adhere to the same rules (e.g. paddle speed)

security
    any password stored in the database must be hashed
        -> strong password hashing algorithm
    protect against SQL injections / XSS attacks
    if creating an API ensure routes are protected
    don't leak any credentials (env)
    with backend:
        enable https connection (e.g. wss instead of ws)
        validation mechanism for forms or user input on the server sided

    
